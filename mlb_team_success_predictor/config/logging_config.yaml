# Logging Configuration for MLB Team Success Predictor
# Defines logging settings for different components

version: 1
disable_existing_loggers: false

# Formatters define the layout of log messages
formatters:
  simple:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
    
  detailed:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(module)s:%(funcName)s:%(lineno)d - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
    
  json:
    format: '%(asctime)s %(name)s %(levelname)s %(message)s'
    class: pythonjsonlogger.jsonlogger.JsonFormatter

# Handlers define where logs are sent
handlers:
  # Console handler for stdout
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: simple
    stream: ext://sys.stdout
    
  # File handler for general logs
  file:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: detailed
    filename: logs/mlb_predictor.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8
    
  # File handler for error logs
  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/errors.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8
    
  # Training-specific log handler
  training_file:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: detailed
    filename: logs/training/training.log
    maxBytes: 20971520  # 20MB
    backupCount: 10
    encoding: utf8
    
  # Prediction-specific log handler
  prediction_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: simple
    filename: logs/prediction/predictions.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8
    
  # Application-specific log handler
  app_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: simple
    filename: logs/app/application.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8
    
  # Time-based rotating handler for daily logs
  daily_file:
    class: logging.handlers.TimedRotatingFileHandler
    level: INFO
    formatter: detailed
    filename: logs/daily/mlb_predictor.log
    when: midnight
    interval: 1
    backupCount: 30
    encoding: utf8

# Loggers define logging behavior for different modules
loggers:
  # Root logger
  root:
    level: INFO
    handlers: [console, file, error_file]
    
  # Data processing loggers
  src.data:
    level: DEBUG
    handlers: [console, file]
    propagate: false
    
  src.data.data_loader:
    level: INFO
    handlers: [file]
    propagate: false
    
  src.data.feature_engineering:
    level: DEBUG
    handlers: [file]
    propagate: false
    
  # Model loggers
  src.models:
    level: INFO
    handlers: [console, file]
    propagate: false
    
  # Training loggers
  src.training:
    level: DEBUG
    handlers: [console, training_file]
    propagate: false
    
  src.training.train_classifier:
    level: DEBUG
    handlers: [training_file]
    propagate: false
    
  src.training.train_regressor:
    level: DEBUG
    handlers: [training_file]
    propagate: false
    
  src.training.hyperparameter_tuning:
    level: INFO
    handlers: [console, training_file]
    propagate: false
    
  # Prediction loggers
  src.prediction:
    level: INFO
    handlers: [console, prediction_file]
    propagate: false
    
  src.prediction.predictor:
    level: DEBUG
    handlers: [prediction_file]
    propagate: false
    
  src.prediction.prediction_pipeline:
    level: INFO
    handlers: [console, prediction_file]
    propagate: false
    
  # Evaluation loggers
  src.evaluation:
    level: INFO
    handlers: [console, file]
    propagate: false
    
  # Visualization loggers
  src.visualization:
    level: WARNING
    handlers: [console]
    propagate: false
    
  # Application loggers
  app:
    level: INFO
    handlers: [console, app_file]
    propagate: false
    
  app.streamlit_app:
    level: INFO
    handlers: [app_file]
    propagate: false
    
  # Script loggers
  scripts:
    level: INFO
    handlers: [console, file]
    propagate: false
    
  scripts.train_all_models:
    level: DEBUG
    handlers: [console, training_file]
    propagate: false
    
  scripts.generate_predictions:
    level: INFO
    handlers: [console, prediction_file]
    propagate: false
    
  # External library loggers
  sklearn:
    level: WARNING
    handlers: [file]
    propagate: false
    
  xgboost:
    level: WARNING
    handlers: [file]
    propagate: false
    
  lightgbm:
    level: WARNING
    handlers: [file]
    propagate: false
    
  matplotlib:
    level: WARNING
    handlers: []
    propagate: false
    
  urllib3:
    level: WARNING
    handlers: []
    propagate: false

# Log record attributes to include
log_record_attributes:
  - name
  - levelname
  - pathname
  - lineno
  - msg
  - args
  - exc_info
  - func
  - sinfo